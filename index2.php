
<?php


//1) С помощью функции list вывести в переменной  vegetable первый элемент массива - помидор.
echo "\n" . 'Ответ 1. ';

		$box = array('помидор', 'яблоко');
		list($vegetable) = $box;
		echo "Первый элемент массива - $vegetable \n";

		$box = array('помидор', 'яблоко');
		list($vegetable, $fruits) = $box;
		echo "Первый элемент массива - $vegetable \n";

//===========================================================================================================================               

//2) Вывести количество элементов массива 
echo "\n" . 'Ответ 2. ';

		$box = array(1 => 'помидор', '2' => 'яблоко', '1key' => 'груша', 'персик', true => 'апельсин');
		$result = count($box);
		echo "Количество элементов массива = $result \n";

//===========================================================================================================================        

//3) Что выведется, почему?
echo "\n" . 'Ответ 3. ';

		$a = 10;
		$b =& $a;

		unset ($a);

		echo "$b \n";

//Ответ: 10, знак & является ссылкой, мы присвиваем переменной $b значение $a, после чего удаляем значение $a, но значение 10 осталось для переменной $b;

//===========================================================================================================================

//4) Что будет, если сравнить две переменные, почему?
echo "\n" . 'Ответ 4. ';

		$var1 = 4;
		$var2 = '4';

		var_dump($var1 == $var2);
//Переменные равны (true), так как переменные равны после преобразования типов.

		var_dump($var1 === $var2);
//Переменные не равны (false), так как переменные тождественно не равны, у них разный тип.

//============================================================================================================================

//5) Что будет в результате сравнения, почему?
echo "\n" . 'Ответ 5. ';

		var_dump('hi' >= 'hi');
//Проверяет равенства двух значений по обе стороны от оператора, в данном примере нам вернет true, так как 'hi' = 'hi'

//============================================================================================================================

//6) Сложить 4 с третьим элементом массива. Вывести результирующий массив?
echo "\n" . 'Ответ 6. ';

		$A = array(1, 6, '2.2e2', 14);
		print $A[3] + 4 . "\n";

//В результате получим 18, так как значение треьего элемента массива = 14 (отсчет начинается с нуля);
//Или все таки нужно брать элемент с индексом 3)))

//============================================================================================================================

//7) Вывести кол-во повторений каждого элемента в массиве:
echo "\n" . 'Ответ 7. ';

		$B = array("pen", "pensil", "pen", "book", "pensil");
		print_r(array_count_values($B));
//Самый быстрый способ с помощью функция array_count_values()
//Функция возвращает массив, ключами которого являются значения массива array, а значениями - количество повторений значений array
//Функция print_r - выводит читабельную информацию

//============================================================================================================================

//8) Как необходимо изменить инициализацию массива, чтобы значение "California" имело индекс=4 без явного задания 4 => "California":
//$states_of_the_USA=array("Alabama", "Colorado", "Hawaii", "California");
echo "\n" . 'Ответ 8. ';

		$states_of_the_USA = array(1 => "Alabama", "Colorado", "Hawaii", "California");
		print $states_of_the_USA[4] . "\n";
//Можно выбрать индекс, с которого следует начинать отсчет, присвоить первому элементу массива 1.


		$states_of_the_USA = array("Alabama", "Colorado", "Hawaii", "California");
		$states_of_the_USA[] = "California";
		echo $states_of_the_USA[4] . "\n";
//Если индекс/ключ не указан, PHP автоматически выберет наименьший незанятый числовой индекс/ключ.

//============================================================================================================================

//9) Вывести все элементы массива с помощью цикла for:
echo "\n" . 'Ответ 9. ';

		$states_of_the_USA = array("Alabama", "Colorado", "Hawaii", "California");
		for ($i = 0; $i < count($states_of_the_USA); $i++) {
		    print_r($states_of_the_USA[$i] . "\n");
		}

//============================================================================================================================

//10) Что выведется в данном примере, почему?
echo "\n" . 'Ответ 10. ';

		$A = array(1, 2, 4, 6);

		unset($A);                    //Удалили переменную A

		if (isset($A)) {                //Определяет, было ли установлено переменной значение отлиительное от NULL
		    echo "Массив определен \n";
		} else {
		    echo "Массив не определен \n";
		}
// Ответ: выведет "Массив не определен",
//Если $A была удалена с помощью unset(), то она больше не считается установленной (имеет значение NULL), поэтому выполняется блок оператора else

//=============================================================================================================================

/*11) Что выведется в случае а) и в случае б) в var_dump($var)? Почему?
       а) $var= var1 + var2
       б) $var= var2 + var1 

       $var1 = array(0 => "car", 1 => "bicycle", 3 => "auto");
       $var2 = array("bike", "bicycle", "car");
       */
echo "\n" . 'Ответ 11. ';

		$var1 = array(0 => "car", 1 => "bicycle", 3 => "auto");
		$var2 = array("bike", "bicycle", "car");
		$var = $var1 + $var2;
		var_dump($var);
//в результате получим: [0]=>"car", [1]=>"bicycle", [3] => "auto", [2]=>"car"
//при обьединении массивов: $var1 + $var2, все дублирующие ключи масива $var2 будут перезатерты

		$var1 = array(0 => "car", 1 => "bicycle", 3 => "auto");
		$var2 = array("bike", "bicycle", "car");
		$var = $var2 + $var1;
		var_dump($var);
//в результате получим: [0]=>"bike", [1]=>"bicycle", [2]=>"car", [3] => "auto"
//при обьединении $var2 + $var1, все дублирующие ключи масива $var1 будут перезатерты

//============================================================================================================================

//12) Что выведется в данном случае и почему?
echo "\n" . 'Ответ 12. ';

		$A = 3;
		for ($k = 0; $k < 3; $k++) {
		    echo $A-- . "\n";
		}
//В результате получим: 3, 2, 1
//Так как в блоке цикла выполняется постфиксный декремент, который возвращает значение $А, а затем уменьшает $А на единицу.

//============================================================================================================================

//13) Что выведет var_dump($var1 == $var2), почему?
echo "\n" . 'Ответ 13. ';


		$var1 = array("pen", "pencil", "table");
		$var2 = array(1 => "pencil", 2 => "table", 0 => "pen");
		var_dump($var1 == $var2);


//Выведет: bool(true)
//В данном примере массивы равны, так как каждый элемент массива $var1 (ключ/значение) = элементам массива $var2 (ключ/значение)

//=============================================================================================================================

//14) Вывести фразу "You are beautiful", при этом  использовать строковый оператор.
		echo "\n" . 'Ответ 14. ';

		echo "\"You are beautiful\"" . "\n";
//необходимо экранировать элементы

//=============================================================================================================================

/*15) Чему будет равна $var2 , почему?


       $var1 = 3;
       $var2 = &$var1; 		

       $var2=50;
       echo $var1;*/

echo "\n" . 'Ответ 15. ';

		$var1 = 3;
		$var2 = &$var1;       //теперь значение у $var2 — то же самое, что и $var1

		$var2 = 50;             //переопределяем $var2, сответсвено и $var1 переопределится
		echo $var1 . "\n";
		echo $var2 . "\n";
//$var2 является ссылкой на $var1, что дает возможность доступа к содержимому одной переменной под разными именами

//=============================================================================================================================

//16) Тремя способами преобразовать переменную $var в строку.
echo "\n" . 'Ответ 16. ';

		$var = "'Я переменная'";

		echo "\nВариант №1 $var";           //Выводит одну или более строк
		print "\nВариант №2 $var";                  //Выводит строку
		print_r("\nВариант №3 $var\n");        //Выводит удобочитаемую информацию о переменной

//=============================================================================================================================

//17) Используя функцию settype, придать переменной $a значение 1, если $a="123a";
echo "\n" . 'Ответ 17. ';

        $a = '123a';
        if ($a === '123a') settype($a, "boolean");                //Если условие верно, то  присваиваем переменной значение 1
        else echo "\n" . 'Переменная а не равна 123a';                      // Если условие в операторе if равно false выводим сообщение

//Функция settype - устанавливает тип переменной.

//=============================================================================================================================

//18) Преобразовать $a="abradсabra" в "abracbra"(удалить символ "d" и третью букву "a").
echo "\n" . 'Ответ 18. ';

		$a = "abradсabra";
		echo str_replace("dсa", "c", $a) . "\n";

//Функция str_replace — Заменяет все вхождения строки поиска на строку замены (что/на что/количество)

//=============================================================================================================================

//19) Какие ключи и значения содержит массив $c?
echo "\n" . 'Ответ 19. ';

		$a = 1;
		$p = "a";
		define("b", 2);

		$c[] = $p;            //0 => "a";
		$c[$p] = $a;        //"a" => 1;
		$c[b] = $p;            //2 => "a";
		$c[] = "a";            //3 => "a";
		$c[$a] = b;            //1 => 2;
		var_dump($c);

		for ($i = 0; $i <= b; $i++) {
		    if ($c[$i] == "a") {
			$c[$i] = "aa";
			break;
		    }
		}
		var_dump($c);

//Ответ: 0 => "aa"; "a" => 1; 2 => "a"; 3 => "a"; 1 => 2;
//с помощью "break" можно досрочно завершить цыкл

//============================================================================================================================

//20) Разработать функцию вычисления факториала заданного числа (n!)
echo "\n" . 'Ответ 20. ';

        $var = 5;                  //Переменная от которой вычисляем факториал c помощью рекурсии - вызов функции внутри функции
        function factorial($k): int
        {
            if ($k == 0)
                return 1;
            $n = 1;
            for ($i = 1; $i <= $k; $i++) {
                $n *= $i;
            }
            return $n;
        }

        echo "$var! = " . factorial($var) . "\n";


        $var = 3;     //Переменная от которой вычисляем факториал c помощью цыкла;
        function factorial2($n): int
        {
            if ($n == 0)
                return 1;
            else return $n * factorial2($n - 1);
        }

        echo "$var! = " . factorial2($var) . "\n";


//===========================================================================================================================

//21) Отсортировать массивы: Имена в алфавитном порядке, в порядке убывания, а возраст в порядке возрастания:  https://i.imgur.com/GQBdDxI.png
echo "\n" . 'Ответ 21. ';


		$spisok = array(
		    'roz1' => array('id' => '1', 'age' => '19', 'gender' => 'm', 'login' => 'Kos'),
		    'roz2' => array('id' => '2', 'age' => '12', 'gender' => 'm', 'login' => 'Oleg'),
		    'roz3' => array('id' => '3', 'age' => '17', 'gender' => 'g', 'login' => 'Sasha'),
		    'roz4' => array('id' => '4', 'age' => '14', 'gender' => 'm', 'login' => 'Roma'),
		    'roz5' => array('id' => '5', 'age' => '15', 'gender' => 'g', 'login' => 'Galina'),
		    'roz6' => array('id' => '6', 'age' => '16', 'gender' => 'g', 'login' => 'Nadi'),
		    'roz7' => array('id' => '7', 'age' => '13', 'gender' => 'g', 'login' => 'Evgenia'),
		    'roz8' => array('id' => '8', 'age' => '18', 'gender' => 'm', 'login' => 'Sveta'),
		    'roz9' => array('id' => '9', 'age' => '11', 'gender' => 'g', 'login' => 'Julia'));





		function login_sort_desc($z, $k)
		{
		    return ($z['login'] > $k['login']);
		}

		uasort($spisok, 'login_sort_desc');
		print_r($spisok);   
//имена в алфавитном порядке, в порядке убывания


		function age_sort($x, $y)
		{
		    return ($x['age'] <=> $y['age']);
		}

		uasort($spisok, 'age_sort');
		print_r($spisok);   
//возраст в порядке возрастания


/*===========================================================================================================================

22) Условные операторы if, else, if:

Создать переменную $age  и присвоить ей произвольное числовое значение.
Написать конструкцию if, которая выводит фразу: "Вам ещё батрачить и батрачить", если значение $age будет от 18 до 59 включительно
(Использовать знак больше или равно, а также меньше или равно).
Расширить конструкцию if, выводя фразу: "Хорош пахать", если $age больше 59.
Расширить конструкцию if-else, выводя фразу: "Мал, еще работать - иди учись!", если $age от 1 до 17 включительно (Использовать знак строго больше, а также строго меньше).
Дополнить конструкцию if-elseif, выводя фразу: "Ты паранормален!", если $age не попадает ни в один диапазон.
*/
echo "\n" . 'Ответ 22. ';

		$age = 6;

		if ($age >= 18 && $age <=59) {
		    echo 'Вам ещё батрачить и батрачить' . "\n";
		} else if ($age > 59) {
		    echo 'Хорош пахать' . "\n";
		} else if ($age > 1 && $age < 17) {
		    echo 'Мал, еще работать - иди учись!' . "\n";
		} else {
		    echo 'Ты паранормален!' . "\n";
		}


//============================================================================================================================

//23) Используя цикл for вывести все нечетные числа от 1 до 59 (в столбик)
echo "\n" . 'Ответ 23. ';

		for ($i=0; $i <= 59; $i++) {
		    if ($i % 2) {
			echo $i . "\n";
		    }
		}
       
/*============================================================================================================================
       
24) Создать константу и присвоить ей значение. Проверить: * присвоилось ли значение константе, * вывести значение, * попытаться изменить значение.
    Пример создания константы
    define ("SUPER_CONSTANT", "Тестеры - лучшие!");
    */	
echo "\n" . 'Ответ 24. ';	
		
		define ("SUPER_CONSTANT", "Тестеры - лучшие!");
        //define ("SUPER_CONSTANT", "Тестеры самые лучшие!");
		define ("CONSTANT", "И разработчики тоже норм)");
		echo SUPER_CONSTANT.  "\n".  CONSTANT. "\n";
		
//Принято записывать константу в вверхнем регистре
//Константа не меняет свое значение, является постоянной

//===========================================================================================================================

//25) Задан массив $arr= array(0=>1, 1=>-3, 2=>-9, 4=>1, 5=>3, 6=>12, 7=>-1, 8=>0). Вычислить сумму всех элементов массива с нечетными индексами.
echo "\n" . 'Ответ 25. ';

		$sum = 0;
		$arr = array(0=>1, 1=>-3, 2=>-9, 4=>1, 5=>3, 6=>12, 7=>-1, 8=>0);
		foreach ($arr as $key => $value) {
		    if ($key % 2) {
			$sum = $sum + $value;
		    }
		}
		print $sum . "\n";
		
//============================================================================================================================

//26) Задан массив $arr= array(0=>1.2, 1=>3, 2=>-3.2, 4=>1.34, 5=>-0.3, 6=>1.2, 7=>1.93, 8=>0.67). Отсортировать и вывести массив по возрастанию элементов.
echo "\n" . 'Ответ 26. ';

		//по ключу 
		$arr= array(0=>1.2, 1=>3, 2=>-3.2, 4=>1.34, 5=>-0.3, 6=>1.2, 7=>1.93, 8=>0.67);
		    foreach ($arr as $key => $value) {
			print "Элемент $key = $value \n";
		    }

               //по значению
		$arr= array(0=>1.2, 1=>3, 2=>-3.2, 4=>1.34, 5=>-0.3, 6=>1.2, 7=>1.93, 8=>0.67);
		natsort($arr);
		    foreach ($arr as $key => $value) {
			print "Ключ=$key | Значение=$value\n";
		    }

//============================================================================================================================
//27) Задан массив $arr= array(0=>1, 1=>-2, 2=>-9, 4=>3, 5=>1, 6=>12, 7=>-1, 8=>0). Найти максимальный и минимальный элементы массива и вывести их.
echo "\n" . 'Ответ 27. ';

		$arr= array(0=>1, 1=>-2, 2=>-9, 4=>3, 5=>1, 6=>12, 7=>-1, 8=>0);
		$max = max($arr);
		$min = min($arr);

		print "max = $max \n";
		print "min = $min \n";
		
//===========================================================================================================================

//28) В переменной $year можно задать значение года в диапазоне от 0 до 9999. Определить, является ли год, заданный в $year високосным.
echo "\n" . 'Ответ 28. ';

		$year = 2021;

		if ($year % 4 == 0) {
		    echo "$year это високосный год \n";
		} else {
		    echo "$year это обычный год \n";
		}

//===========================================================================================================================

//29) В массиве содержится 5 чисел. Вывести произведение числа на его квадрат в виде 2^2=4.
echo "\n" . 'Ответ 29. ';

		$arr = array(0 => 1.2, 1 => 3, 2 => -3.2, 4 => 1.34, 5 => -0.3, 6 => 1.2, 7 => 1.93, 8 => 0.67);

        foreach ($arr as $key => $value) {
            print "$value ^ $value =  $value * $value \n";
        }

		
/*===========================================================================================================================

30) Измените "W" из строки $string на "Q".
Не используйте строковые функции.
*/
echo "\n" . 'Ответ 30. ';

		$string = 'Winter is coming!';
		$string[0] = "Q";
		echo $string;

/*===========================================================================================================================

31) Выведите значение переменной $string, используя символическую ссылку.
*/
echo "\n" . 'Ответ 31. ';

		$string=123;
		$link="string"; // или $p="b" или $p="c" (присваиваем $link имя переменной $string)
		echo $$link; // выводит переменную, на которую ссылается $link, т. е. $string
		

/*===========================================================================================================================
32) Выведите в браузере текстовое поле с заполеннным в нем значением $string.
В одну строчку.
*/
echo "\n" . 'Ответ 32. ';

$string='tytytytyy';

?>
<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport"
		  content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<title>Document</title>
</head>
<body>
<input type="text" value ="<?php echo $string; ?>">
</body>
</html>

<?php
/*===========================================================================================================================
* 33) Выведите cумму всех цифр в числе $int.
* Используйте цикл while или do while
*/
echo "\n". 'Ответ 33. ';

$int=323;
$sum = 0;
while ($int != 0) {
     $sum +=$int % 10;
     $int = intdiv($int, 10);
}

echo $sum;


    
    
/*===========================================================================================================================
* 34) Назовите пары ключ\значение в массиве $array.
* Добавьте значение 'Jeanne d'Arc' в массив NULL.
* Используйте теги "<pre>" для структурированного отображения.
* Выведите массив 3-мя различными способами.
*/

echo "\n". 'Ответ 34. ';

$array = array(FALSE => TRUE, TRUE => FALSE, NULL => array(PHP_OS, "PHP_VERSION"));
$array[NULL][]='Jeanne d\'Arc';

/*echo "\n". 'Ответ 34.1'. "\n";

var_dump($array); 

echo "\n". 'Ответ 34.2'. "\n";

		    foreach ($array as $key => $value) {
			print "$key:$value \n";
		    }
foreach($array as $version => $massiv)
{
foreach($massiv  as  $inner_key => $value)
{
echo "[$version][$inner_key] = $value
";
}
}

*/

$i=0;
while ($i != count($array)) {
	
     echo $array[$i];
     $i++;
}




    
/*===========================================================================================================================


/*Задачи:

1. Дано массив целых чисел $a, отсортированный по возрастанию, и некое число $b. Написать функцию searchInArray($a, $b), которая максимально быстро определит, есть ли в массиве искомый элемент и вернет TRUE или FALSE.*/
echo "\n" . 'Задача 1. ';

function searchInArray(array $a, $b)
{

    foreach ($a as $value) {
        if ($b === $value) {
            return true;
        }
    }
    return false;
}

var_dump(searchInArray([4, 77, 8, 5, 8, 8, 99], 5));

    
/*===========================================================================================================================
/*2. Дано: ассоциативный массив. Написать функцию arrayReverseKeys($a), которая перевернет ключи этого массива, используя минимальное количество циклов. Функция должна возвращать массив как результат.
Пример:
$a = array( ‘a’ => ‘apple’, ‘b’ => ‘banana’, ‘c’ => ‘cherry’);
Результат — ключи идут в обратном порядке:
$a = array( ‘c’ => ‘apple’, ‘b’ => ‘banana’, ‘a’ => ‘cherry’);*/
echo "\n" . 'Задача 2. ';

$a = array( 'a' => 'apple', 'b' => 'banana', 'c' => 'cherry');
function arrayReverseKeys($a)
{
    return array_combine(array_reverse(array_keys($a)), array_values($a));
}

var_dump (arrayReverseKeys($a));



/*===========================================================================================================================
/*3. Считать с консоли длины катетов прямоугольного треугольника и рассчитать его гипотенузу, площадь, углы(в градусах), периметр.
echo "\n" . 'Задача 3. ';
    
/*===========================================================================================================================
4. Найти элемент предыдущий перед максимальным по величине в массиве. (с сортировкой и без)
echo "\n" . 'Задача 4. ';
    
/*===========================================================================================================================
5. Вывести все простые числа в диапазоне от 30 до 60
echo "\n" . 'Задача 5. ';
    
/*===========================================================================================================================
6. Реализовать функцию шифрования строки по словарю + шифр цезаря, реализовать функцию дешифровки
*/
echo "\n" . 'Задача 6. ';

$message="12345";


$arr = str_split($message);
$alfabet=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
function shifr($arr)

{

    $i=1;
    while ($i < count($arr)) {

        echo $arr[$i];
        $i++;

    }
    echo $arr[0];
   // $message[$i] = $alfabet[$j + 3];
}


var_dump (shifr($arr));

/*$arr2 = implode($arr);
echo "jndtn". $arr2;*/


    
/*===========================================================================================================================
7. Задача на логику “Счастливые билеты”
Предположим, что номер билета состоит из 6 цифр. Билет считается
счастливым, если сумма первых трех цифр равняется сумме вторых трех цифр.
Написать функцию luckyTickets($k), которая посчитает и вернет возможное количество таких билетов, где $k — число цифр в билете (четное, 2,4,6...). Билет 000000 считается.
Примеры счастливых билетов: 933591, 030300, 113311.
Обратите внимание: количество цифр в пропуске может быть как больше, так и
меньше 6. Гарантируемое условие - количество цифр четное.*/
echo "\n" . 'Задача 7. ';
function luckyTickets($k)
{
    if ($k % 2) {
        return 'Число цифр в билете нечетное';
    }
    $count=0;
    $max_value = pow(10, $k / 2);
    $t1 = 0;
    while ($t1 < $max_value) {
        $left = (string)$t1;
        $sum1 = 0;
        $i = 0;
        while (isset($left[$i])) {
            $sum1 .= $left[$i];
            $i++;
        }
        $t2 = 0;
        while ($t2 < $max_value) {
            $right = (string)$t2;

            $j = 0;
            $sum2 = 0;
            while (isset($right[$j])) {
                $sum2 .= $right[$j];
                $j++;
            }
            if ($sum1 == $sum2) {
                $count++;
            }
            $t2++;
        }
        $t1++;
    }
    return $count;
}

echo "Количество счастливых билетов - ". luckyTickets(4);

/*$k=8;
$k_max=(pow(10, $k)-pow(10, ($k-1)))-1;     //Количество билетов
$n_max=pow(10, $k)-1;                                    //Максимальный номер билета
$n_min=pow(10, ($k-1));                                    //Минимальный номер билета

echo "Ответ Задача 7. Максимальное количество билетов $k_max \n Максилальный номер билета $n_max \n Минимальный номер $n_min\n" ;
//$nticket=0;


    if ($k % 2)
		   echo "Если в билете $k цифр, то билет не может быть счастливым\n";
		} else if ($age > 59) {
		    echo 'Хорош пахать' . "\n";
		} else if ($age > 1 && $age < 17) {
		    echo 'Мал, еще работать - иди учись!' . "\n";
		} else {
		    echo 'Ты паранормален!' . "\n";
		}




/*function luckyTickets($k)
{

    foreach ($k as $value) {
        if ($b === $value) {
            return true;
        }
    }
    return false;
}


$int=323;
$sum = 0;
while ($int != 0) {
     $sum +=$int % 10;
     $int = intdiv($int, 10);
}

echo $sum;

var_dump(searchInArray([4, 77, 8, 5, 8, 8, 99], 5));


/*Логика оценивания: все задания - это 100 баллов(или 100%). Разбалловка:
задания 1-34 по 1,5 балла,
задачи c 1й по 5ю по 5 баллов
задачи  6я и 7я  по 12 баллов
*/






?>

